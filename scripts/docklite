#!/usr/bin/env python3
"""DockLite CLI entry point."""

import sys
import os
from pathlib import Path

# Get project root
PROJECT_ROOT = Path(__file__).parent.absolute()

# Check if we're in venv, if not try to use it
if not hasattr(sys, 'real_prefix') and not (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
    # Not in venv, check if venv exists
    venv_path = PROJECT_ROOT / ".venv"
    if venv_path.exists():
        # Use venv python
        venv_python = venv_path / "bin" / "python"
        if venv_python.exists():
            # Re-execute with venv python
            os.execv(str(venv_python), [str(venv_python)] + sys.argv)
        else:
            print("Error: Virtual environment found but python executable missing.")
            print(f"Run: ./docklite setup-dev")
            sys.exit(1)
    else:
        print("Warning: Virtual environment not found. CLI dependencies may not be installed.")
        print(f"Run: ./docklite setup-dev")
        print("")
        # Continue anyway, maybe dependencies are installed globally

# Add scripts directory to path so we can import cli
sys.path.insert(0, str(PROJECT_ROOT / "scripts"))

try:
    from cli.main import app
except ImportError as e:
    print(f"Error importing CLI: {e}")
    print("")
    print("Please run setup first:")
    print("  python3 -m venv .venv")
    print("  .venv/bin/pip install -r scripts/requirements.txt")
    print("")
    print("Or use the setup command:")
    print("  python3 docklite setup-dev")
    sys.exit(1)

if __name__ == "__main__":
    app()

