---
description: Docker commands and container management
globs: ["docker-compose.yml", "backend/Dockerfile", "frontend/Dockerfile"]
tags: ["docker"]
---

# Docker Commands for DockLite

## DockLite CLI Commands

**Recommended:** Use the DockLite CLI for all operations.

### Start/Stop/Restart

```bash
cd ~/docklite

# Start
./docklite start

# Stop
./docklite stop

# Restart
./docklite restart

# Rebuild
./docklite rebuild

# Status
./docklite status
```

### Logs

```bash
# All logs
./docklite logs

# Specific service
./docklite logs backend
./docklite logs frontend
```

### Execute Commands

```bash
# Enter container
sg docker -c "docker exec -it docklite-backend sh"

# Run migrations
./docklite init-db

# Database shell
sg docker -c "docker exec -it docklite-backend sqlite3 /data/docklite.db"
```

### Tests

```bash
# All tests
./docklite test

# Backend only
./docklite test-backend

# Frontend only
./docklite test-frontend

# With options
./docklite test-backend -v              # Verbose
./docklite test-backend -k test_auth    # Specific tests
./docklite test-backend --cov           # With coverage
```

### Advanced

```bash
# Rebuild without cache
./docklite rebuild --no-cache

# Stop and remove volumes (WARNING: deletes data!)
./docklite stop --volumes

# Backup system
./docklite backup

# Clean unused resources
./docklite clean --all
```

**Full CLI documentation:** [scripts/README.md](mdc:../scripts/README.md)

## Important Notes

### Prefer DockLite CLI

**Always use `./docklite` commands when available** - they handle sg docker automatically:

```bash
# GOOD - Use CLI
./docklite start
./docklite stop
./docklite test

# OK - Direct docker-compose (when needed)
sg docker -c "docker-compose ..."
```

### When to Use Direct Docker Commands

Only use direct docker commands for:
- Debugging specific containers
- Advanced Docker operations not in CLI
- Custom docker commands

**Use `sg docker -c "..."` wrapper** because:
- User may be in `docker` group
- But current shell doesn't have group activated
- `sg docker -c` runs command in docker group context
- CLI scripts handle this automatically

## Container Architecture

- `docklite-backend` - FastAPI app (port 8000)
- `docklite-frontend` - Vue.js SPA served by nginx static server (port 5173)
- `docklite-traefik` - Traefik v3 reverse proxy (port 80/443) for domain routing
- Shared network: `docklite-network`
- Volumes:
  - `docklite-data` - SQLite database
  - `/home/docklite/projects` - user projects
  - `/var/run/docker.sock` - Docker socket (for container management)

## Database

SQLite stored in Docker volume `docklite-data` at `/data/docklite.db`

Access:
```bash
sg docker -c "docker exec -it docklite-backend sqlite3 /data/docklite.db"
```
