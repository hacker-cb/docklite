---
description: Python typing standards with modern syntax (Python 3.8+)
globs: ["**/*.py"]
tags: ["python", "typing"]
alwaysApply: false
---
# Python Typing Standards

## üéØ –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

**–í–°–ï —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ç–æ–¥—ã –î–û–õ–ñ–ù–´ –∏–º–µ—Ç—å type hints:**
- ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Å —Ç–∏–ø–∞–º–∏
- ‚úÖ Return type annotations
- ‚úÖ –î–ª—è void —Ñ—É–Ω–∫—Ü–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `-> None:`

**–ù–ï–¢ –ò–°–ö–õ–Æ–ß–ï–ù–ò–ô** - typing –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω –¥–ª—è –≤—Å–µ–≥–æ –Ω–æ–≤–æ–≥–æ –∫–æ–¥–∞.

## üì¶ –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å (Python 3.8+ —Å annotations)

### 1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ `from __future__ import annotations`

**–í–°–ï–ì–î–ê** –¥–æ–±–∞–≤–ª—è–π—Ç–µ –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞:

```python
from __future__ import annotations

from typing import Optional, Literal
```

**–ü–æ—á–µ–º—É:** –ü–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤ Python 3.8+

### 2. –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã (list, dict, tuple)

**–° `from __future__ import annotations` –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ lowercase:**

```python
from __future__ import annotations

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
def get_items() -> list[str]:
    return ["item1", "item2"]

def get_mapping() -> dict[str, int]:
    return {"a": 1, "b": 2}

def get_pair() -> tuple[str, int]:
    return ("name", 42)

# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å)
from typing import List, Dict, Tuple

def get_items() -> List[str]:  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ list[str]
    ...
```

### 3. Optional –∏ None

**–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `Optional` –¥–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π:**

```python
from typing import Optional

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û
def find_user(user_id: int) -> Optional[User]:
    return user or None

def process(value: Optional[str] = None) -> str:
    return value or "default"

# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û
def find_user(user_id: int) -> User | None:  # –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Optional
    ...
```

### 4. Literal –¥–ª—è —Å—Ç—Ä–æ–≥–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π

**–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `Literal` –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –∑–Ω–∞—á–µ–Ω–∏–π:**

```python
from typing import Literal

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - IDE –∏ mypy –ø—Ä–æ–≤–µ—Ä—è—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
Operation = Literal["start", "stop", "restart"]

def control_container(operation: Operation) -> None:
    ...  # –¢–æ–ª—å–∫–æ "start", "stop", "restart" —Ä–∞–∑—Ä–µ—à–µ–Ω—ã

# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û
def control_container(operation: str) -> None:
    ...  # –õ—é–±–∞—è —Å—Ç—Ä–æ–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞
```

**–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–æ–≤:** `backend/app/types.py`

```python
ContainerOperation = Literal["start", "stop", "restart", "remove"]
ContainerState = Literal["running", "exited", "paused"]
ProjectStatus = Literal["created", "deployed", "error"]
```

### 5. Async —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã

```python
from typing import AsyncGenerator

# Async generator
async def stream_data() -> AsyncGenerator[str, None]:
    for item in data:
        yield item

# Regular generator
def iter_items() -> Generator[int, None, None]:
    for i in range(10):
        yield i
```

## üìù –°—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ø–æ –æ–±–ª–∞—Å—Ç—è–º

### Backend Services

```python
from __future__ import annotations

from typing import Optional

class ProjectService:
    def __init__(self, db: AsyncSession) -> None:
        self.db = db
    
    async def create_project(
        self, 
        data: ProjectCreate, 
        owner_id: int
    ) -> tuple[Optional[Project], Optional[str]]:
        """
        Create project.
        
        Returns:
            Tuple of (project, error_message)
        """
        ...
```

**–ü–∞—Ç—Ç–µ—Ä–Ω:** –í–æ–∑–≤—Ä–∞—â–∞–µ–º `tuple[Optional[T], Optional[str]]` –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —Å –æ—à–∏–±–∫–∞–º–∏.

### Backend API Endpoints

```python
from __future__ import annotations

from fastapi import APIRouter

router = APIRouter()

@router.get("/users", response_model=list[UserResponse])
async def get_users(
    db: AsyncSession = Depends(get_db),
    current_user: User = Depends(get_current_active_user)
) -> list[dict]:
    """Get all users."""
    ...
    return users  # FastAPI –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∞–ª–∏–¥–∏—Ä—É–µ—Ç response_model

@router.post("/users", status_code=201)
async def create_user(
    user_data: UserCreate,
    db: AsyncSession = Depends(get_db)
) -> dict:
    ...
```

**–ü—Ä–∞–≤–∏–ª–æ:** FastAPI endpoints –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å `response_model` –ò return type hint.

### CLI Utilities

```python
from __future__ import annotations

from typing import Optional

def log_info(message: str) -> None:
    """Print info message."""
    console.print(f"‚Ñπ {message}", style="blue")

def get_hostname() -> str:
    """Get server hostname."""
    return hostname or "localhost"

def get_access_url(
    path: str = "", 
    port: Optional[str] = None
) -> str:
    """Build access URL."""
    ...
```

**–ü—Ä–∞–≤–∏–ª–æ:** –í—Å–µ utility —Ñ—É–Ω–∫—Ü–∏–∏ —Å —Ç–∏–ø–∞–º–∏, –¥–∞–∂–µ –ø—Ä–æ—Å—Ç—ã–µ.

### Test Fixtures

```python
from __future__ import annotations

import pytest
from typing import AsyncGenerator, Generator

@pytest.fixture
async def db_session() -> AsyncGenerator[AsyncSession, None]:
    """Create test database session."""
    async with TestSessionLocal() as session:
        yield session

@pytest.fixture
def sample_data() -> dict:
    """Return sample test data."""
    return {"key": "value"}

@pytest.fixture
def temp_dir() -> Generator[str, None, None]:
    """Create temporary directory."""
    temp = tempfile.mkdtemp()
    yield temp
    shutil.rmtree(temp)
```

**–ü—Ä–∞–≤–∏–ª–æ:** Fixtures –î–û–õ–ñ–ù–´ –∏–º–µ—Ç—å return type hints –¥–ª—è IDE –ø–æ–¥–¥–µ—Ä–∂–∫–∏.

## üîç mypy - –°—Ç–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞

### –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è

**Backend:** `backend/mypy.ini`  
**CLI:** `scripts/mypy.ini`

### –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏

```bash
# Backend
cd backend
mypy app tests

# CLI
cd scripts
mypy cli
```

### –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫

**–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏:**

```python
# –î–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
result = some_untyped_lib()  # type: ignore

# –î–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –æ—à–∏–±–∫–∏
result = some_func()  # type: ignore[attr-defined]

# –î–ª—è –≤—Å–µ–≥–æ —Ñ–∞–π–ª–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–π/–∞–ª–µ–º–±–∏–∫)
# mypy: ignore-errors
```

**–ù–ï –ó–õ–û–£–ü–û–¢–†–ï–ë–õ–Ø–ô–¢–ï** `type: ignore` - —Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å —Ç–∏–ø—ã.

## üìã –ß–µ–∫–ª–∏—Å—Ç –¥–ª—è –Ω–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤

- [ ] –î–æ–±–∞–≤–ª–µ–Ω `from __future__ import annotations` –≤ –Ω–∞—á–∞–ª–µ
- [ ] –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç type hints
- [ ] –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è `list/dict/tuple` –≤–º–µ—Å—Ç–æ `List/Dict/Tuple`
- [ ] `Optional` –¥–ª—è –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
- [ ] `Literal` –¥–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–æ
- [ ] Async generators —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–∞–∫ `AsyncGenerator[T, None]`
- [ ] Void —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç `-> None:`
- [ ] Docstrings –æ–ø–∏—Å—ã–≤–∞—é—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
- [ ] mypy –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç –±–µ–∑ –æ—à–∏–±–æ–∫

## ‚ùå –¢–∏–ø–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏

### 1. –ó–∞–±—ã–ª–∏ from __future__

```python
# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û
def get_items() -> list[str]:  # SyntaxError –≤ Python 3.8!
    ...

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û
from __future__ import annotations

def get_items() -> list[str]:  # –†–∞–±–æ—Ç–∞–µ—Ç –≤ Python 3.8+
    ...
```

### 2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞

```python
from typing import List, Dict  # –ù–µ –Ω—É–∂–Ω–æ —Å annotations!

# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û
def process(items: List[str]) -> Dict[str, int]:
    ...

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û
def process(items: list[str]) -> dict[str, int]:
    ...
```

### 3. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ return type

```python
# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û
def check_admin(user: User):  # –ù–µ—Ç return type!
    if not user.is_admin:
        raise HTTPException(...)

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û
def check_admin(user: User) -> None:  # –Ø–≤–Ω–æ —É–∫–∞–∑–∞–Ω None
    if not user.is_admin:
        raise HTTPException(...)
```

### 4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Literal

```python
# ‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û - runtime –∑–Ω–∞—á–µ–Ω–∏–µ
Operation = Literal["start"]  # –¢–æ–ª—å–∫–æ –¥–ª—è —Ç–∏–ø–æ–≤!
operation = Operation  # –û—à–∏–±–∫–∞!

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–û - type alias
Operation = Literal["start", "stop"]
def do(op: Operation) -> None:  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ —Ç–∏–ø
    ...
```

## üéì –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏

- [Python typing docs](https://docs.python.org/3/library/typing.html)
- [mypy documentation](https://mypy.readthedocs.io/)
- [PEP 585 - Type Hinting Generics](https://peps.python.org/pep-0585/)
- [PEP 563 - Postponed Evaluation](https://peps.python.org/pep-0563/)

## üìä –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞

**‚úÖ –ü–æ–∫—Ä—ã—Ç–∏–µ typing:** 95%+  
**‚úÖ mypy –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:** –ù–∞—Å—Ç—Ä–æ–µ–Ω  
**‚úÖ CI/CD –ø—Ä–æ–≤–µ—Ä–∫–∞:** –î–æ–±–∞–≤–ª–µ–Ω–∞  
**‚úÖ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:** –ê–∫—Ç—É–∞–ª—å–Ω–∞

---

**–ü–û–ú–ù–ò–¢–ï:** Type hints –¥–µ–ª–∞—é—Ç –∫–æ–¥ —Å–∞–º–æ–¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä—É–µ–º—ã–º, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—Ç –æ—à–∏–±–∫–∏ –∏ —É–ª—É—á—à–∞—é—Ç –ø–æ–¥–¥–µ—Ä–∂–∫—É IDE!
