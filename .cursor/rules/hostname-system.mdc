---
description: Hostname detection system with priority logic (Python and Bash)
---

# Hostname System

Unified hostname detection across Python and Bash with same priority logic.

## Priority Chain

```
1. HOSTNAME in .env (explicit config) ← Highest priority
2. System hostname (socket.gethostname() / hostname command)
3. Fallback parameter (e.g., HTTP Host header)
4. "localhost" (default)
```

## Python Usage

```python
from app.utils.hostname import get_server_hostname, get_access_url

# Get hostname
hostname = get_server_hostname(fallback="localhost")
# Returns: config value OR system hostname OR fallback OR "localhost"

# Build URLs
frontend_url = get_access_url()
# http://artem.sokolov.me

api_url = get_access_url(path="/api")
# http://artem.sokolov.me/api

dashboard_url = get_access_url(path="/dashboard", port=None)
# http://artem.sokolov.me/dashboard

custom_port = get_access_url(path="", port=8888)
# http://artem.sokolov.me:8888
```

**Location:** [backend/app/utils/hostname.py](mdc:backend/app/utils/hostname.py)

## Bash Usage

```bash
# Source common functions
source scripts/lib/common.sh

# Get hostname
hostname=$(get_hostname)

# Build URLs
frontend=$(get_access_url)                    # http://artem.sokolov.me
api=$(get_access_url "/api")                  # http://artem.sokolov.me/api
dashboard=$(get_access_url "/dashboard")      # http://artem.sokolov.me/dashboard
custom=$(get_access_url "" "8888")            # http://artem.sokolov.me:8888
https=$(get_access_url "/secure" "" "https")  # https://artem.sokolov.me/secure
```

**Location:** [scripts/lib/common.sh](mdc:scripts/lib/common.sh)

## Configuration

### Priority 1: Config (Recommended for Production)

```bash
# .env
HOSTNAME=docklite.example.com
SECRET_KEY=your-secret-key
```

### Priority 2: System Hostname

```bash
sudo hostnamectl set-hostname artem.sokolov.me
# Auto-detected by hostname functions
```

### Priority 3: Auto-detect (Default)

No config needed - falls back to localhost

## Validation Rules

**Valid hostnames:**
- example.com
- subdomain.example.com
- artem.sokolov.me

**Invalid (skipped to next priority):**
- localhost (too generic)
- 192.168.1.1 (raw IP address)
- (empty string)

## ALWAYS in Scripts

✅ **Use hostname functions:**
```bash
log_info "Frontend: $(get_access_url)"
log_info "API: $(get_access_url "/api")"
log_info "Dashboard: $(get_access_url "/dashboard")"
```

❌ **NEVER hardcode:**
```bash
log_info "Frontend: http://localhost:5173"  # Wrong!
log_info "API: http://localhost:8000"       # Wrong!
```

## URL Features

- Automatically hides default ports (80, 443)
- Adds leading slash to paths if missing
- Supports http/https protocols
- Consistent Python + Bash behavior
